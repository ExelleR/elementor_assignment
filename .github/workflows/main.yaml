name: Deploy and Test Flask App on Kubernetes

on: [push]

jobs:
  deploy_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./dockerized_app/Dockerfile
        push: false
        tags: flask-app:latest

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Install kind (Kubernetes in Docker)
      uses: engineerd/setup-kind@v0.5.0
    - name: Testing Kind
      run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

    # - name: Create a Kubernetes cluster with kind
    #   run: |
    #     kind create cluster

    # - name: Load Docker image into kind cluster
    #   run: |
    #     kind load docker-image flask-app:latest

    # - name: Set up kubectl
    #   uses: azure/setup-kubectl@v1

    # - name: Deploy Flask application using Helm
    #   run: |
    #     helm upgrade --install flask-app ./Helm --set image.repository=flask-app,image.tag=latest

    # - name: Run tests
    #   run: |
    #     # Here we will send HTTP requests to your Flask application's endpoints
    #     # You can use tools like curl or any other HTTP client
    #     # Example:
    #     curl http://localhost:port/endpoint

    - name: Cleanup
      run: |
        kind delete cluster
