name: Deploy and Test Flask App on Kubernetes

on: [push]

jobs:
  deploy_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

   

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Install kind (Kubernetes in Docker)
      uses: engineerd/setup-kind@v0.5.0
      with:
        version: "v0.20.0"
    - name: Testing Kind
      run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
          docker images

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./dockerized_app
        file: ./dockerized_app/Dockerfile
        load: true
        tags: flask-app:latest  

  
    - name: Load Docker image into kind cluster
      run: |
        kind load docker-image flask-app:latest



    - name: Deploy Flask application using Helm
      run: |
        helm upgrade --install flask-app ./Helm --set image.repository=flask-app,image.tag=latest

    - name: Wait for Flask app to be ready
      run: |
        # Wait for pods to be ready
        helm list
        kubectl rollout status deployment --timeout=5m
     

    - name: Run tests
      run: |
        # Here we will send HTTP requests to your Flask application's endpoints
        # You can use tools like curl or any other HTTP client
        # Example:
        curl http://localhost:5000/data

    - name: Cleanup
      run: |
        kind delete cluster
